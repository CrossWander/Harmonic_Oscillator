<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" mc:Ignorable="d" x:Class="Harmonic_Oscillator.MainWindow"
        Title="MainWindow" Height="692.5" Width="693" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True" Background="Transparent">
    <Window.Resources>
        <Storyboard x:Key="OnClick1">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Results_window">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Hide_result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Print_Result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnClick2">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Show_result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Hide_result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Results_window">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Print_Result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnClick3">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Show_result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Hide_result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Results_window">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Print_Result">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnClick4">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Frequency_setting_on">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Frequency_setting_off">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="label">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="Шаг изм. частоты :"/>
            </ObjectAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label1">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FFF7960B"/>
            </ColorAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="label1">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                    <DiscreteObjectKeyFrame.Value>
                        <FontWeight>Bold</FontWeight>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="label2">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="Стандартный режим"/>
            </ObjectAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label2">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
            </ColorAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="label2">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                    <DiscreteObjectKeyFrame.Value>
                        <FontWeight>Bold</FontWeight>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnClick5">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Frequency_setting_off">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Frequency_setting_on">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="label">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="Частота :"/>
            </ObjectAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label2">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FFF7960B"/>
            </ColorAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="label2">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                    <DiscreteObjectKeyFrame.Value>
                        <FontWeight>Bold</FontWeight>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="label1">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="Вычисление максимальной частоты"/>
            </ObjectAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="label1">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="generate">
            <BeginStoryboard Storyboard="{StaticResource OnClick1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Hide_result">
            <BeginStoryboard x:Name="OnClick2_BeginStoryboard" Storyboard="{StaticResource OnClick2}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Show_result">
            <BeginStoryboard x:Name="OnClick2_BeginStoryboard1" Storyboard="{StaticResource OnClick3}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="MenuItem.Click" SourceName="menuItem">
            <BeginStoryboard Storyboard="{StaticResource OnClick1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Frequency_setting_on">
            <BeginStoryboard x:Name="OnClick4_BeginStoryboard" Storyboard="{StaticResource OnClick4}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Frequency_setting_off">
            <BeginStoryboard x:Name="OnClick5_BeginStoryboard" Storyboard="{StaticResource OnClick5}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid>

        <Rectangle x:Name="Main_Window" Fill="#FF1F1F1F" Height="405" VerticalAlignment="Top" d:IsLocked="True"/>
        <Rectangle x:Name="Title" Fill="#FF444444" Height="36" VerticalAlignment="Top" MouseDown="Title_MouseDown" d:IsLocked="True"/>
        <Label Content="Генератор синусоидальных колебаний" HorizontalAlignment="Left" Height="38.38" Margin="151,0,0,0" VerticalAlignment="Top" Width="395" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="Black" FontWeight="Bold" MouseDown="Title_MouseDown" d:IsLocked="True"/>
        <Button x:Name="Exit" Content="Button" Margin="659.5,3.333,4.5,350.667" Style="{DynamicResource Exit_button}" Click="Exit_Click" d:IsLocked="True">
            <Button.Resources>
                <Style x:Key="Exit_button" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="#FFDDDDDD"/>
                    <Setter Property="BorderBrush" Value="#FF707070"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="29" VerticalAlignment="Top" Width="29">
                                    <Rectangle x:Name="rectangle" Fill="#FF444444" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="2.5,-3.5,-5,3.5"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="5.25,-3.5,-2.75,3.5" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="Auto" Height="Auto" FontSize="17.333"><Run FontSize="21.333" Text=" "/><Run FontWeight="Bold" FontSize="21.333" Text="X"/><LineBreak/><Run/><LineBreak/><Run/></TextBlock>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="True">
                                        <Setter Property="Margin" TargetName="rectangle" Value="2.5,-3,-5,3"/>
                                        <Setter Property="Margin" TargetName="textBlock" Value="5,-3,-2.5,3"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF6C6C6C"/>
                                        <Setter Property="Margin" TargetName="rectangle" Value="2.5,-3.25,-5,3.25"/>
                                        <Setter Property="Margin" TargetName="textBlock" Value="5,-3.25,-2.5,3.25"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFC10202"/>
                                        <Setter Property="Margin" TargetName="rectangle" Value="2.5,-3,-5,3"/>
                                        <Setter Property="Margin" TargetName="textBlock" Value="5,-3,-2.5,3"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Menu HorizontalAlignment="Left" Height="27" Margin="0,36,0,0" VerticalAlignment="Top" Width="693" Background="#FF1F1F1F" d:IsLocked="True">
            <MenuItem x:Name="menuItem" Header="Генерировать" Height="27" Width="115" FontSize="16" Foreground="#FFF7F7F7" Click="generate_Click"/>
            <MenuItem x:Name="About" Header="О программе" Foreground="#FFF7F7F7" FontSize="16"  Click="About_Click"/>
        </Menu>
        <Button x:Name="generate" Content="Генерировать" HorizontalAlignment="Left" Height="43.9" Margin="408.5,307.933,0,0" VerticalAlignment="Top" Width="184" RenderTransformOrigin="0.495,0.552" Click="generate_Click" Style="{DynamicResource generate_button}">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="generate_button" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="43.9" VerticalAlignment="Top" Width="184">
                                    <Rectangle x:Name="rectangle" Fill="#FF444343" HorizontalAlignment="Left" Height="43.9" VerticalAlignment="Top" Width="184" RadiusX="5" RadiusY="5"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="Генерировать" VerticalAlignment="Top" Height="23.9" Width="164" FontSize="20" TextAlignment="Center" FontWeight="Bold" FontFamily="Segoe UI"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true"/>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF8B5A28"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA85807"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <GroupBox Header="Начальные парметры" HorizontalAlignment="Left" Height="259" Margin="59.5,108.933,0,0" VerticalAlignment="Top" Width="292" FontSize="18.667" Foreground="White"/>
        <Label Content="Амплитуда :" HorizontalAlignment="Left" Height="38.38" Margin="72.5,139.933,0,0" VerticalAlignment="Top" Width="148" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White"/>
        <TextBox x:Name="Amplitude_number" HorizontalAlignment="Left" Height="29" Margin="276,149,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" Text="1" TextAlignment="Center" FontSize="18.667" KeyDown="Validation_text"/>
        <Label x:Name="label" Content="Частота :" HorizontalAlignment="Left" Height="38.38" Margin="72.5,183.313,0,0" VerticalAlignment="Top" Width="182" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White"/>
        <TextBox x:Name="Frequency_number" HorizontalAlignment="Left" Height="29" Margin="276,193,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" Text="50" FontSize="18.667" TextAlignment="Center" KeyDown="Validation_text"/>
        <Label Content="Фаза :" HorizontalAlignment="Left" Height="38.38" Margin="72.5,226.693,0,0" VerticalAlignment="Top" Width="102" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White"/>
        <TextBox x:Name="Phase_number" HorizontalAlignment="Left" Height="29" Margin="276,236,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" TextAlignment="Center" FontSize="18.667" Text="0" KeyDown="Validation_text"/>
        <Label Content="Погрешность (%):" HorizontalAlignment="Left" Height="38.38" Margin="72.5,270.073,0,0" VerticalAlignment="Top" Width="183" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White"/>
        <TextBox x:Name="Error_number" HorizontalAlignment="Left" Height="29" Margin="276,279,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" RenderTransformOrigin="0.625,0.806" TextAlignment="Center" FontSize="18.667" Text="1" KeyDown="Validation_text"/>
        <Label Content="T моделирования(с):" HorizontalAlignment="Left" Height="38.38" Margin="72.5,313.453,0,0" VerticalAlignment="Top" Width="213.333" FontSize="20" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White"/>
        <TextBox x:Name="Time_number" HorizontalAlignment="Left" Height="29" Margin="276,323,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" RenderTransformOrigin="0.625,0.806" TextAlignment="Center" FontSize="18.667" Text="1" KeyDown="Validation_text"/>
        <GroupBox Header="Выбор метода:" HorizontalAlignment="Left" Margin="374.5,108.933,0,0" VerticalAlignment="Top" Height="169.703" Width="270.667" FontSize="18.667" Foreground="White"/>
        <RadioButton x:Name="method_Euler" Content="метод Ейлера" HorizontalAlignment="Left" Margin="392,149.23,0,0" VerticalAlignment="Top" FontSize="18.667" Foreground="White" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" IsChecked="True" />
        <RadioButton x:Name="method_Runge_Kutta" Content="метод Рунге-Кутты" HorizontalAlignment="Left" Margin="392,187.689,0,0" VerticalAlignment="Top" FontSize="18.667" Foreground="White" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS"/>
        <RadioButton x:Name="method_Adams_Bachfort" Content="метод Адамса-Башфорта" HorizontalAlignment="Left" Margin="392,231.069,0,0" VerticalAlignment="Top" FontSize="18.667" Foreground="White" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS"/>
        <Button x:Name="Show_result" Content="Button" HorizontalAlignment="Left" Margin="0,384,0,0" VerticalAlignment="Top" Width="693" Height="21" Style="{DynamicResource Show_result_button}" Visibility="Hidden" d:IsLocked="True">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Show_result_button" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="693">
                                    <Rectangle x:Name="rectangle" Fill="#FF444343" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="693"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" VerticalAlignment="Top" Width="693" Height="21" TextAlignment="Center" FontSize="16" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" FontWeight="Bold"><Run Language="ru-ru" Text="Показать результаты"/><LineBreak/><Run/></TextBlock>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true"/>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF8B5A28"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA85807"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="Hide_result" Content="Button" HorizontalAlignment="Left" Margin="0,384,0,0" VerticalAlignment="Top" Width="693" Height="21" Style="{DynamicResource Hide_result_button}" Visibility="Hidden" d:IsLocked="True">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Hide_result_button" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="693">
                                    <Rectangle x:Name="rectangle" Fill="#FF444343" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="693"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" Text="Скрыть результаты" VerticalAlignment="Top" Height="21" Width="693" FontSize="16" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" TextAlignment="Center" FontWeight="Bold"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true"/>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF8B5A28"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA85807"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Rectangle x:Name="Results_window" Fill="#FF1F1F1F" HorizontalAlignment="Left" Height="287.5" Margin="0,405,0,0" VerticalAlignment="Top" Width="693" Visibility="Hidden" d:IsLocked="True"/>
        <TextBlock x:Name="Print_Result" HorizontalAlignment="Left" Height="228" Margin="32.5,435,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="633.667" Background="#FFFDFDFD" FontSize="20" Visibility="Hidden"/>
        <Button x:Name="Frequency_setting_on" Content="Button" HorizontalAlignment="Left" Height="30.933" Margin="259.5,68,0,0" VerticalAlignment="Top" Width="83" Style="{DynamicResource Frequency_setting_on}" ToolTip="Включить режим вычисления максимально возможной частоты синусоиды на CPU" Click="Frequency_setting_on_Click">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Frequency_setting_on" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="Storyboard1">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="4.333"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10.083"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="15.833"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="22.458"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="29.208"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="38.27"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="41.394"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-0.023"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="4.333"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10.083"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="15.833"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="22.458"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="29.208"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="38.27"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="41.394"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-0.023"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-0.083"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.105"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.042"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-0.019"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-0.019"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-0.083"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.105"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.042"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-0.02"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-0.019"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-0.019"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid HorizontalAlignment="Left" Height="30.933" VerticalAlignment="Top" Width="83">
                                    <Rectangle Fill="#FF131313" HorizontalAlignment="Left" Height="30.933" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="83" Stroke="Black"/>
                                    <Rectangle x:Name="rectangle" Fill="#FFEEE7DF" HorizontalAlignment="Left" Height="30.933" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="41.667" RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Path x:Name="path" Data="M0,12.182999 L28.396,12.182999 28.396,14.433 0,14.433 z M0,6.0829997 L28.396,6.0829997 28.396,8.3329999 0,8.3329999 z M0,0 L28.396,0 28.396,2.25 0,2.25 z" Fill="#FF3A3A3A" HorizontalAlignment="Left" Height="14.433" Margin="7.27,8,0,0" Stretch="Fill" VerticalAlignment="Top" Width="28.396" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true"/>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FFE28600"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                        </Trigger.EnterActions>
                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FFE28600"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Label x:Name="label2" Content="Стандартный режим" HorizontalAlignment="Left" Height="30.933" Margin="72.5,68,0,0" VerticalAlignment="Top" Width="182" FontSize="16" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="#FFF7960B" FontWeight="Bold"/>
        <Button x:Name="Frequency_setting_off" Content="Button" HorizontalAlignment="Left" Height="30.933" Margin="259.5,68,0,0" VerticalAlignment="Top" Width="83" Style="{DynamicResource Frequency_setting_off}" Visibility="Hidden" ToolTip="Возврат в стандартный режим" Click="Frequency_setting_off_Click">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Frequency_setting_off" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="Storyboard1">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-4.417"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-10.522"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-16.46"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-22.835"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-28.085"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-34.71"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-41.296"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.016"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-4.417"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-10.522"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-16.46"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-22.835"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-28.085"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-34.71"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-41.296"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.016"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.124"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.001"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-0.001"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.124"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.124"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.062"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.001"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-0.001"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.124"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid HorizontalAlignment="Left" Height="30.933" VerticalAlignment="Top" Width="83">
                                    <Rectangle Fill="#FF171716" HorizontalAlignment="Left" Height="30.933" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="83" Stroke="Black"/>
                                    <Rectangle x:Name="rectangle" Fill="#FFEEE7DF" HorizontalAlignment="Left" Height="30.933" RadiusY="5" RadiusX="5" VerticalAlignment="Top" Width="41.667" RenderTransformOrigin="0.5,0.5" Margin="41.375,0,-0.042,0">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Path x:Name="path" Data="M0,12.182999 L28.396,12.182999 28.396,14.433 0,14.433 z M0,6.0829997 L28.396,6.0829997 28.396,8.3329999 0,8.3329999 z M0,0 L28.396,0 28.396,2.25 0,2.25 z" Fill="#FF3A3A3A" HorizontalAlignment="Left" Height="14.433" Margin="48.645,8,0,0" Stretch="Fill" VerticalAlignment="Top" Width="28.396" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true"/>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FFE28600"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                        </Trigger.EnterActions>
                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FFE28600"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Label x:Name="label1" Content="Вычисление максимальной частоты" HorizontalAlignment="Left" Height="30.933" Margin="357.83,68,0,0" VerticalAlignment="Top" Width="301.67" FontSize="16" FontFamily="/Harmonic_Oscillator;component/Fonts/#Arial Unicode MS" Foreground="White" FontWeight="Bold"/>

    </Grid>
</Window>
